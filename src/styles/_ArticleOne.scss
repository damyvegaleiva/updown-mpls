.article-one {
  display: flex;
  flex-flow: column wrap;
  justify-content: center;
  align-items: center;
  gap: 3rem;
  width: 95%;
  max-width: 900px;
  margin: auto auto 100px;
  padding: 30px 15px;
  background: map-get($map: $colorMap, $key: "lightBlack");
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

.article-one-subhead {
  width: 100%;
  padding: 20px 5px;
  font-size: $text2;
  text-align: center;
  color: map-get($map: $colorMap, $key: "white");
  border-right: 3px solid map-get($map: $colorMap, $key: "neonCyan");
  border-left: 3px solid map-get($map: $colorMap, $key: "magenta");
  text-shadow: 5px 2px map-get($map: $colorMap, $key: "purple");
  order: 1;
  line-height: 4rem;
  font-weight: 100;

  i {
    text-decoration: underline;
  }
}

.aside-one {
  text-align: center;
  order: 2;

  img {
    width: 100%;
    max-width: 500px;
    aspect-ratio: 2/3;
    border-radius: 20px;
  }

  .aside-one__parrafo {
    font-size: $text1-25;
    padding: 20px 10px;
    position: absolute;
    bottom: 8%;
    background: map-get($map: $colorMap, $key: "lightBlack");
    text-shadow: 5px 2px map-get($map: $colorMap, $key: "magenta");
    z-index: 1;
  }

  .aside-one__photo-by {
    width: 100%;
    padding: 3px 0;
    font-size: $text0-75;
    position: absolute;
    bottom: 3%;
    background: map-get($map: $colorMap, $key: "darkBlack");
    text-shadow: 2px 1px map-get($map: $colorMap, $key: "magenta");
    z-index: 1;
  }
}

[class*="parrafo-"] {
  h2 {
    font-size: $text2;
    text-transform: uppercase;
    font-weight: 100;
    font-family: $fontBebasNeue;
  }

  svg {
    font-size: $text3;
  }

  p {
    margin: auto;
    font-size: $text1-25;
    line-height: 1.75rem;
    text-align: center;
    font-family: $fontBebasNeue;
  }

  h2,
  svg,
  p {
    color: map-get($map: $colorMap, $key: "white");
    text-shadow: 1px 2px map-get($map: $colorMap, $key: "purple");
    z-index: 1;
  }
}

@property --angle {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

.box {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  gap: 15px;
  height: 100%;
  padding: 25px;
  border-radius: 15px;
  max-width: 750px;
  background: url("/images/bg-special.jpg");

  &::before,
  &::after {
    content: "";
    box-sizing: initial;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    border-radius: 15px;
    background: conic-gradient(
      from var(--angle),
      transparent 75%,
      map-get($map: $colorMap, $key: "sliderCyan"),
      map-get($map: $colorMap, $key: "magenta")
    );
    z-index: -1;
    padding: 1.5px;
    animation: 3s spin linear infinite;
    will-change: transform;
  }

  &::after {
    filter: blur(15px);
    opacity: 0.5;
  }
}

.parrafo-one {
  order: 3;
}

.parrafo-two {
  order: 4;
}

.parrafo-three {
  order: 5;
}

.parrafo-four {
  order: 6;
}

.parrafo-five {
  order: 7;
}

.parrafo-six {
  order: 8;
}

// ---------------------------------- BREAKPOINT ---------------------------------- //
@media screen and (min-width: 768px) {
  .article-one-subhead {
    font-size: $text2-75;
  }
}

// ---------------------------------- BREAKPOINT ---------------------------------- //
@media screen and (min-width: 1024px) {
  .article-one {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-areas: "subhead aside";
    align-content: center;
    max-width: 1250px;
    padding: 30px;
  }

  .box {
    max-width: none;
    p {
      font-size: $text1-5;
    }
  }

  .article-one-subhead {
    grid-area: subhead;
    margin: auto;
    text-align: center;
    line-height: 5.5rem;
  }

  .aside-one {
    grid-area: aside;
    margin: auto;

    .aside-one__parrafo {
      font-size: $text1-25;
    }
  }
}

@media screen and (min-width: 1440px) {
  .article-one {
    grid-template-areas:
      "subhead aside"
      "pf1 aside";

    .article-one-subhead {
      font-size: $text3-5;
      padding: 0;
    }

    .aside-one {
      img {
        max-width: none;
      }
    }
  }
}

@keyframes animate {
  0% {
    transform: rotate(0deg);
    will-change: transform;
  }

  100% {
    transform: rotate(360deg);
    will-change: transform;
  }
}

@keyframes spin {
  from {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}
